"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[405],{9581:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Controllers","title":"Controllers","description":"Scrypt is in very early stages of development. Expect changes and bugs during this phase. If you find a bug or have a suggestion for how to improve Scrypt, please contact zblox164 and provide relevant details.","source":"@site/docs/Controllers.md","sourceDirName":".","slug":"/Controllers","permalink":"/Scrypt/docs/Controllers","draft":false,"unlisted":false,"editUrl":"https://github.com/zblox164/Scrypt/edit/main/docs/Controllers.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"defaultSidebar","previous":{"title":"About","permalink":"/Scrypt/docs/About"},"next":{"title":"Services","permalink":"/Scrypt/docs/Services"}}');var o=r(4848),s=r(8453);const l={sidebar_position:3},i="Controllers",a={},c=[{value:"What are Controllers?",id:"what-are-controllers",level:2},{value:"Controllers vs Shared Modules",id:"controllers-vs-shared-modules",level:3},{value:"Usage",id:"usage",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"controllers",children:"Controllers"})}),"\n",(0,o.jsx)(n.admonition,{title:"NOTICE",type:"danger",children:(0,o.jsxs)(n.p,{children:["Scrypt is in very ",(0,o.jsx)(n.strong,{children:"early stages"})," of development. Expect changes and bugs during this phase. If you find a bug or have a suggestion for how to improve Scrypt, please contact zblox164 and provide relevant details."]})}),"\n",(0,o.jsx)(n.h2,{id:"what-are-controllers",children:"What are Controllers?"}),"\n",(0,o.jsxs)(n.p,{children:["Controllers serve as client-side modules that enable you to manage specific behaviors within your project (can be considered services but client-side). Often, controllers are associated with the ",(0,o.jsx)(n.code,{children:"player"}),", managing behavior such as the ",(0,o.jsx)(n.code,{children:"Camera"}),", ",(0,o.jsx)(n.code,{children:"User Input"}),", and other components."]}),"\n",(0,o.jsx)(n.p,{children:"Some examples of controllers:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"CameraController.luau"}),"\n",(0,o.jsx)(n.li,{children:"UserInputController.luau"}),"\n",(0,o.jsx)(n.li,{children:"CharacterController.luau"}),"\n",(0,o.jsx)(n.li,{children:"UIController.luau"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Each controller module bundles all related functionality, containing the necessary code and features required for its intended use case. It should NOT have functions relating to other features."}),"\n",(0,o.jsx)(n.h3,{id:"controllers-vs-shared-modules",children:"Controllers vs Shared Modules"}),"\n",(0,o.jsx)(n.p,{children:"In contrast to controllers, which are tailored to manage specific client-side features and behaviors, shared modules serve as reusable code that can be leveraged by both client-side and server-side components. A good example of how shared modules can be useful is creating a custom string library with functions not included by default in Luau, or converting a frequently used function into a module containing the snippet for easy reuse."}),"\n",(0,o.jsx)(n.p,{children:"Some examples of shared modules:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"StringUtils.luau"}),"\n",(0,o.jsx)(n.li,{children:"CreateInstanceTree.luau"}),"\n",(0,o.jsx)(n.li,{children:"GameConfig.luau (settings module)"}),"\n",(0,o.jsx)(n.li,{children:"GameUtils.luau"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"By categorizing modules into distinct types, such as controllers and shared modules, developers can maintain an organized project structure that promotes clarity and efficiency."}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsxs)(n.p,{children:["Controllers are extremely easy to setup and use. To get started, ensure you have Scrypt installed into your studio session. Next, add a ",(0,o.jsx)(n.code,{children:"ModuleScript"})," into ",(0,o.jsx)(n.code,{children:"ReplicatedStorage/Controllers"})," (use custom path if specified)."]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsx)(n.p,{children:"Scrypt searches through all non-script instances for controllers so you can use folders to separate controllers based on feature."})}),"\n",(0,o.jsxs)(n.p,{children:['Give it a name, preferably with a suffix of "Controller" to follow the standard naming convention. We can start writing our code like any regular ',(0,o.jsx)(n.code,{children:"ModuleScript"}),". Let's give it some placeholder functions:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'--!strict\r\n--@client\r\n\r\nlocal TestController = {}\r\n\r\nfunction TestController.Run()\r\n\tprint("TEST RUNNING")\r\nend\r\n\r\nfunction TestController.Cancel()\r\n\tprint("TEST CANCELED")\r\nend\r\n\r\nfunction TestController.Get(Name: string): string\r\n\treturn tostring(Name)\r\nend\r\n\r\nreturn TestController\n'})}),"\n",(0,o.jsxs)(n.admonition,{type:"danger",children:[(0,o.jsxs)(n.p,{children:["Modules cannot yield while being initially loaded. This means you cannot have global variables with ",(0,o.jsx)(n.code,{children:"WaitForChild"})," or anything that will yield the current thread."]}),(0,o.jsx)(n.p,{children:"This also means that if you need to access the Scrypt framework in a service, shared module, or controller, you should not need to wait for the framework to load."})]}),"\n",(0,o.jsxs)(n.p,{children:["To access the controller, in a separate ",(0,o.jsx)(n.code,{children:"LocalScript"}),", simply run the ",(0,o.jsx)(n.code,{children:"GetController"})," function with the name of the controller passed as an argument:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-lua",children:'--!strict\r\n--@client\r\n\r\nlocal Scrypt = require(game:GetService("ReplicatedStorage").Scrypt)\r\nScrypt.Init():Wait()\r\n\r\nlocal TestController = Scrypt.GetController("TestController")\r\nprint(TestController.Get("TEST")) --\x3e TEST\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsx)(n.p,{children:"All controllers are lazily loaded! This means controllers are only loaded when they are needed instead of all of your scripts being loaded at runtime."})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>l,x:()=>i});var t=r(6540);const o={},s=t.createContext(o);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);